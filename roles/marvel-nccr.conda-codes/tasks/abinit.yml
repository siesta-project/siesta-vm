- name: "Create env: {{ env.name }}"
  command: "{{ conda_code_exec }} create -qy -c conda-forge --override-channels -n {{ env.name }} {{ env.packages | join(' ') }}"
  args:
    creates: "{{ conda_code_parent_dir }}/{{ conda_code_link_dir }}/envs/{{ env.name }}"

# - name: Copy abinit test files
#   copy:
#     src: "{{ item }}"
#     dest: /tmp/abinit_test/
#   loop:
#   - abinit_test/run.in
#   - abinit_test/Si.psp8

# TODO: this doesn not work
# - name: Run abinit test
#   # shell: bash -lc "{{ conda_code_exec }} activate {{ env.name }}; mpirun -np {{ conda_code_test_cpus }} '{{ conda_code_parent_dir }}/{{ conda_code_link_dir }}/envs/{{ env.name }}/bin/abinit' run.in"
#   shell: >
#      eval $(/root/.local/.condaenvs/bin/conda shell.bash hook);
#      source /root/.local/Miniconda3-py38_4.9.2-Linux-x86_64/etc/profile.d/conda.sh;
#      /root/.local/.condaenvs/bin/conda activate abinit; mpirun -np 2 '${HOME}/.local/.condaenvs/envs/abinit/bin/abinit' run.in
#   args:
#     executable: /bin/bash
#     chdir: /tmp/abinit_test/

- include_role:
    name: release_notes
  vars:
    section: "abinit"
    option: "version"
    value: "{{ env.version }}"
  when: release_notes is defined and release_notes

- include_role:
    name: release_notes
  vars:
    section: "abinit"
    option: "usage"
    value: >-
      abinit is available in the {{ env.name }} Conda environment.
      Activate with `conda activate {{ env.name }}`, then run `abinit`.
  when: release_notes is defined and release_notes

- name: Set variables for AiiDA abinit code
  set_fact:
    abinit_executables:
    - name: abinit
      folder: "{{ conda_code_parent_dir }}/{{ conda_code_link_dir }}/envs/{{ env.name }}/bin"
      executable: abinit
      plugin: abinit
      version: "{{ env.version }}"
      prepend_text: "{{ conda_code_exec }} activate {{ env.name }}"
